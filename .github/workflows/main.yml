name: Build Qt App - Step by Step

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v3
      - name: 📦 Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.5.2'
          target: 'desktop'
          arch: ${{ matrix.os == 'windows-latest' && 'win64_mingw' || matrix.os == 'macos-latest' && 'clang_64' || 'gcc_64' }}
      - name: Install Qt with Multimedia
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.5.2'
          modules: 'qtmultimedia'
          target: 'desktop'
          arch: 'clang_64'

      - name: 🧰 Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: 🏗️ Build App
        run: cmake --build build --config Release

      - name: 📁 Package App
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            echo "Linux packaging with cpack or AppImage..."
            # Exemple : cpack -G DEB
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            echo "macOS packaging with macdeployqt..."
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "Windows packaging with windeployqt..."
          fi

      - name: 🛫 Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: QtApp-${{ matrix.os }}
          path: build/
